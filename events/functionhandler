#ifndef FUNCTIONHANDLER_H_INCLUDED
#define FUNCTIONHANDLER_H_INCLUDED

#include "handlerbase"

///////////////////////////////////////////////////////////////////////////////
// Function handler (static or external)
///////////////////////////////////////////////////////////////////////////////

template <typename... Args>
class FunctionHandler : public Handler<Args...>
{
public:
    typedef void (*Function)(Args...);

public:
    FunctionHandler(Function function) : _function(function) {};

    void Call(Args... args)
    {
        (*_function)(args...);
    }

    void Accept(HandlerVisitor<Args...>& visitor)
    {
        visitor.Visit(*this);
    }

private:
    Function _function;
};

template <typename... Args>
FunctionHandler<Args...>* newFunctionHandler(void (*func)(Args...))
{
    return new FunctionHandler<Args...>(func);
}

#endif // FUNCTIONHANDLER_H_INCLUDED
